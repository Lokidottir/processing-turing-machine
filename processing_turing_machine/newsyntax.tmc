//new syntax type, more turing-table like
// move can be absolute (no sign, eg 1) or relative (signed, eg +1, -1)
// state num (inferrable, 0-indexed) | if true write | if true move | if true state | if false write | if false move | if false state
MODE readable
@0
if true then
    write 0 //ommitable as keep
    move +1 //ommitable as stay
    goto 1  //ommitable as do next
else then
    write 1
    move -1
    goto 1
endif

MODE machine
//horribly non-readable BUT a one liner, equivilent to the above
0 | 0 | +1 | 1 | -1 | 1
